version: 2
elixir_image: &elixir_image
  image: circleci/elixir:1.8.1

merge_master: &merge_master
  name: Fetch PR merge commit
  command: |
    # Merges master into our PR and fails if we have a conflict on that
    if [[ -n "${CIRCLE_PULL_REQUEST}" ]]; then
      git fetch origin master
      git config --global user.email "circleci@pagerduty.com"
      git config --global user.name "circleci"
      git rebase origin/master
      if [[ $? -ne 0 ]]; then
        echo "Merge conflict detected; aborting. Please manually fix the conflict and retry."
        exit 1
      fi
    fi
elixir_setup: &elixir_setup
  name: Set up Elixir environment
  command: |
    mix local.hex --force --if-missing
    mix local.rebar --force
    mix deps.get
jobs:
  test:
    docker:
      - image: circleci/elixir:1.8.1
    steps:
      - checkout
      - run: ssh-add -D && echo "${GITHUB_SSH_KEY}" | base64 --decode | ssh-add - # to access private Github deps
      - run:
          <<: *merge_master
      - run:
          <<: *elixir_setup
      - run:
          name: 'run test suites for all subprojects'
          command: mix test
workflows:
  version: 2
  test_and_publish:
    jobs:
      - test:
          context: PagerDuty